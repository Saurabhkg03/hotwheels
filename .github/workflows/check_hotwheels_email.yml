name: "Check Hot Wheels (Email) Every 3 Hours"

on:
  schedule:
    - cron: "0 */3 * * *"  # Every 3 hours (UTC)
  workflow_dispatch:       # Allows manual trigger from GitHub UI

jobs:
  check-hotwheels:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout code with full history (needed for pull & push)
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true  # Required to allow pushing using GITHUB_TOKEN

      # 2) Set up Python 3.11
      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3) Install Python dependencies
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install playwright beautifulsoup4
          playwright install --with-deps

      # 4) Run the Hot Wheels checker script
      - name: "Run Hot Wheels Checker & Email"
        env:
          GMAIL_USER:         ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          EMAIL_TO:           ${{ secrets.EMAIL_TO }}
        run: |
          python check_hotwheels_email.py

      # 5) Commit and push updated previous.json
      - name: "Commit and push updated previous.json"
        if: ${{ always() }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage changes if any
          git add previous.json

          # Commit early (required before rebase) if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "chore: temp update previous.json before rebase"
          fi

          # Pull latest changes and rebase
          git fetch origin main
          git rebase origin/main

          # Re-stage and commit final version if needed
          git add previous.json
          if ! git diff --staged --quiet; then
            git commit -m "chore: update previous.json [ci skip] ($(date -u +"%Y-%m-%dT%H:%M:%SZ"))"
            git push origin HEAD:main
          else
            echo "No changes in previous.json â†’ skipping commit."
          fi
